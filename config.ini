[Paths]
base_dir = .
temp_dir = .\temp
output_dir = .\output
models_dir = .\resources\models
colmap_bin = .\resources\models\COLMAP\COLMAP.bat
blender_bin = .\resources\models\Blender\blender.exe
ffmpeg_bin = .\resources\models\FFmpeg\ffmpeg.exe
# 3DGS-specific paths
3dgs_dir = .\3dgs
gaussian_splatting_path = .\resources\models\gaussian-splatting
3dgs_train_script = .\resources\models\gaussian-splatting\train.py
3dgs_render_script = .\resources\models\gaussian-splatting\render.py
3dgs_convert_script = .\resources\models\gaussian-splatting\convert.py

[Processing]
use_gpu = true
min_images = 20
max_images = 200
max_image_size = 3200
max_num_features = 16000
enhance_images = true
quality_threshold = 0.5
blur_threshold = 100.0
frame_extraction_rate = 1
feature_matcher = exhaustive
point_density = high
use_undistorted = true
mesh_resolution = high
mesh_smoothing = true
smoothing = 0.5
texture_resolution = 4096
target_faces = 100000
enhance_colors = true
color_enhancement_mode = balanced
# 3DGS Processing flags
use_3dgs = true
3dgs_iterations = 15000
3dgs_resolution = 1200

[GaussianSplatting]
# Enable 3D Gaussian Splatting
enable_3dgs = true
# Training parameters
default_iterations = 15000
default_resolution = 1200
# Quality-based iterations
medium_iterations = 10000
high_iterations = 15000
photorealistic_iterations = 20000
# Quality-based resolution
medium_resolution = 1000
high_resolution = 1200
photorealistic_resolution = 1600
# Output settings
output_format = ply
use_sh_degree = 3
# Densification parameters
densify_from_iter = 500
densify_until_iter = 15000
densify_grad_threshold = 0.0002
# Training optimization
lambda_dssim = 0.2
opacity_reset_interval = 3000
# GPU settings
force_cuda = true
# Validation settings
test_iterations = 7000,30000
save_iterations = 7000,30000

[Output]
default_format = obj
export_formats = obj,ply,fbx,gltf
compress_output = false
# 3DGS output settings
keep_3dgs_outputs = true
keep_intermediate_ply = true
convert_to_mesh = true

[DeepEnhancement]
# Mode: "realesrgan", "gfpgan", or "both"
mode = both
# Model paths
realesrgan_model_path = models/RealESRGAN_x4plus.pth
gfpgan_model_path = models/GFPGANv1.4.pth
# Use models
use_realesrgan = true
use_gfpgan = true
# Performance settings
tile_size = 400
half_precision = true
gfpgan_upscale = 2

[Cleanup]
remove_temp_files = false
keep_logs = true
# 3DGS cleanup settings
keep_3dgs_outputs = true
keep_intermediate_files = true
cleanup_colmap_files = false

[QualitySettings]
# Medium Quality (Faster processing)
medium_3dgs_iterations = 10000
medium_3dgs_resolution = 1000
medium_target_faces = 50000
medium_texture_resolution = 2048

# High Quality (Balanced)
high_3dgs_iterations = 15000
high_3dgs_resolution = 1200
high_target_faces = 100000
high_texture_resolution = 4096

# Photorealistic Quality (Best quality, slower)
photorealistic_3dgs_iterations = 20000
photorealistic_3dgs_resolution = 1600
photorealistic_target_faces = 200000
photorealistic_texture_resolution = 8192

[Pipeline]
# Define the 3DGS workflow stages
stage_1 = initialization
stage_2 = project_setup
stage_3 = media_upload
stage_4 = quality_selection
stage_5 = image_processing
stage_6 = dataset_building
stage_7 = 3dgs_training
stage_8 = point_cloud_conversion
stage_9 = mesh_export

# Stage timeouts (in seconds)
image_processing_timeout = 1800
dataset_building_timeout = 3600
3dgs_training_timeout = 7200
conversion_timeout = 1800